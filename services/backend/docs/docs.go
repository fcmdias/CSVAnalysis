// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/byyear": {
            "get": {
                "description": "Fetches a list of vehicles filtered as per the query parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicles by year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter (all, hybrid, or electric)",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of vehicles sorted by year",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VehicleByYear"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filter - The filter query parameter is required and must be one of 'all', 'hybrid', or 'electric'. Response body will contain: {'error': 'Invalid filter'}",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Method not supported",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/popular": {
            "get": {
                "description": "Fetches a list of popular vehicles, sorted and filtered as per query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get popular vehicles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter (all, hybrid, or electric)",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of vehicles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VehiclePopularity"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid sort order or filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Method not supported",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.VehicleByYear": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.VehiclePopularity": {
            "type": "object",
            "properties": {
                "make": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "web.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
